#!/usr/bin/python
"""
This module will parse a set of output that has been generated by top in batch mode.
It expects to be fed the output corresponding to one iteration of top.
"""

import argparse
import os
import sys

__author__ = 'David Oreper'

class TopParser:

    def __init__(self, arg1):
        """
        """


class FileParser:

    def __init__(self, fileName):
        """
        """
        self.fileName = fileName

    def parse(self):
        log("Parsing file %s" % self.fileName)

        # Parse the file
        # Pass output sequence from top to TopParser


def log(message):
    """ Print the given message """
    if verbose:
        print "LOG: %s" % message

def main(argv):
    examples = """
    Examples:
    # Here's an example of something.
        %prog -f outputFile
    """
    parser = argparse.ArgumentParser(description="""This tool is used to parse output from the top command""",
                                     epilog=examples, formatter_class=argparse.RawDescriptionHelpFormatter)

    parser.add_argument("fileName", type=str, default=None, help="File to parse")
    parser.add_argument("-v", "--verbose", action='store_true', help="True to enable verbose logging mode")
    options = parser.parse_args(argv)

    global verbose
    verbose = options.verbose

    log("Got options: %s" % options)


    fileParser = FileParser(options.fileName)
    fileParser.parse()


if __name__ == "__main__":
    main(sys.argv[1:])
